{"version":3,"sources":["./src/app/auth/connexion/connexion.page.html","./src/app/auth/connexion/connexion-routing.module.ts","./src/app/auth/connexion/connexion.module.ts","./src/app/auth/connexion/connexion.page.scss","./src/app/auth/connexion/connexion.page.ts"],"names":[],"mappings":"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","file":"auth-connexion-connexion-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Connexion</ion-title>\\n  </ion-toolbar>\\n</ion-header >\\n\\n<ion-content padding>\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Adresse e-mail</ion-label>\\n            <ion-input type=\\\"email\\\" ngModel name=\\\"email\\\" required email #emailCtrl=\\\"ngModel\\\"></ion-input>\\n            <ion-icon name=\\\"mail\\\" slot=\\\"start\\\"></ion-icon>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!emailCtrl.valid && emailCtrl.touched\\\" lines=\\\"none\\\">\\n            <ion-label  color=\\\"danger\\\" >Adresse e-mail invalide</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Mot de passe</ion-label>\\n            <ion-input type=\\\"password\\\" ngModel name=\\\"mdp\\\" required minlength=\\\"6\\\" maxlength=\\\"30\\\" #mdpCtrl=\\\"ngModel\\\"></ion-input>\\n            <ion-icon name=\\\"key\\\" slot=\\\"start\\\"></ion-icon>\\n          </ion-item>\\n          <ion-item *ngIf=\\\"!mdpCtrl.valid && mdpCtrl.touched\\\" lines=\\\"none\\\">\\n            <ion-label  color=\\\"danger\\\" >Mdp invalide : 6 charactères minimum</ion-label>\\n          </ion-item>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button type='submit' expand = \\\"block\\\" [disabled]=\\\"!f.valid\\\">Se connecter</ion-button>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col text-center>\\n          <ion-button type='button' (click)=\\\"goToInscription()\\\" fill =\\\"outline\\\">S'inscrire</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </form>\\n</ion-content>\\n\\n\\n\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConnexionPage } from './connexion.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConnexionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConnexionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnexionPageRoutingModule } from './connexion-routing.module';\n\nimport { ConnexionPage } from './connexion.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConnexionPageRoutingModule\n  ],\n  declarations: [ConnexionPage]\n})\nexport class ConnexionPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvY29ubmV4aW9uL2Nvbm5leGlvbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NavController, AlertController } from '@ionic/angular';\n\n@Component({\n\tselector: 'app-connexion',\n\ttemplateUrl: './connexion.page.html',\n\tstyleUrls: [ './connexion.page.scss' ]\n})\nexport class ConnexionPage implements OnInit {\n\tconstructor(private navCtrl: NavController, private authSrv: AuthService, private alertCtrl: AlertController) {}\n\n\tgoToInscription() {\n\t\tthis.navCtrl.navigateForward([ 'inscription' ]);\n\t}\n\n\tgoToMedias() {\n\t\tthis.navCtrl.navigateForward('/medias');\n\t}\n\n\tngOnInit() {}\n\n\tonSubmit(form: NgForm) {\n\t\tconst email = form.value.email;\n\t\tconst mdp = form.value.mdp;\n\t\tthis.authSrv.connexion(email, mdp).subscribe(\n\t\t\t(resData) => {\n\t\t\t\tthis.authSrv.loggin();\n\t\t\t\tthis.navCtrl.navigateForward('/medias');\n\t\t\t},\n\t\t\t(errorRes) => {\n\t\t\t\tconst code = errorRes.error.error.message;\n\t\t\t\tvar msg = 'Connexion impossible, veuillez réessayer.';\n\t\t\t\tif (code == 'EMAIL_NOT_FOUND') {\n\t\t\t\t\tmsg = \"Cet adresse mail n'a pas pu être trouvé.\";\n\t\t\t\t} else if (code == 'INVALID_PASSWORD') {\n\t\t\t\t\tmsg = 'Mot de passe invalide.';\n\t\t\t\t}\n\t\t\t\tthis.showError(msg);\n\t\t\t}\n\t\t);\n\t}\n\n\tshowError(msg: string) {\n\t\tthis.alertCtrl.create({ header: 'Connexion impossible', message: msg, buttons: [ 'Ok' ] }).then((alertEl) => {\n\t\t\talertEl.present();\n\t\t});\n\t}\n}\n"],"sourceRoot":""}